// 스프링시큐리티가 지원하는 권한 계층
 1. 웹계층 - URL 요청에 따른 메뉴 혹은 화면단위의 레벨 보안
 2. 서비스 계층 - 화면 단위가 아닌 메소드 같은 기능 단위의 레벨 보안
 3. 도메인계층(ACL) - 객체 단위의 레벨 보안


// FilterSecurityInterceptor
 - 마지막에 위치한 필터로서 인증된 사용자에 대하여 특정 요청의 승인/거부 여부를 최종적으로 결정
 - 인증객체 없이 보호자원에 접근을 시도할 경우 AuthenticationException 발생
 - 인증 후 자원에 접근 가능한 권한이 존재하지 않을 경우 AccessDeniedException 발생
 - 권한 제어 방식 중 HTTP 자원의 보안을 처리하는 필터
 - 권한 처리를 AccessDecisionManager 에게 맡김


// AccessDecisionManager (interface)
- 인증 정보, 요청정보, 권한정보를 이용해서 사용자의 자원접근을 허용할 것인지 거부할 것인지를 최종 결정하는 주체
- 여러개의 Voter 들을 가질 수 있으며, Voter 들로부터 접근 허용, 거부, 보류에 해당하는 각각의 값을 리턴받고 판단 및 결정.
- 최종 접근 거부 시 예외 발생
- 접근 결정의 세가지 유형 (세가지 구현체가 있음.)
1. AffirmativeBased - 여러개의 Voter 클래스 중 하나라도 접근 허가로 결론을 내면 접근 허가로 판단한다.
2. ConsensusBased - 다수결(승인 및 거부) 에 의해 최종 결정을 판단한다. 승인과 거부수가 동일하면 디폴트로는 승인이지만, 발생
                    allowIfEqualGrantedDecisions 를 false 로 설정하면 디폴트가 거부로 변경됨. (승인2, 거부1 = 승인, 승인1,거부2 = 거부)
3. UnanimousBased - 모든 Voter 가 만장일치로 접근을 승인해야 하며 그렇지 않은 경우 접근을 거부함.


// AccessDecisionVoter
- Voter 가 권한 부여 과정에서 판단하는 자료
1. Authentication - 인증정보 User
2. FilterInvocation - 요청정보(antMatcher("/user"))
3. ConfigAttributes - 권한정보 (hasRole("USER"))
- 결정 방식
1. ACCESS_GRANTED : 접근허용 (1)
2. ACCESS_DENIED: : 접근거부 (-1)
3. ACCESS_ABSTAIN : 접근보류 (0)


// FLOW
1. FilterSecurityInterceptor 가 AccessDecisionManager 에게 인증을 부탁
2. AccessDecisionManager 는 AccessDecisionVoter 에게 인증을 위임. (AccessDecisionVoter 에게 decide(인증정보, 요청정보, 권한정보) 를 전달함)
3. AccessDecisionVoter 는 ACCESS_GRANTED, ACCESS_DENIED, ACCESS_ABSTAIN 를 AccessDecisionManager 에게 반환하고 승인되면 FilterSecurityInterceptor 에게 전달되고
   거부되면 ExceptionTranslationFilter 에게 전달됨


// Associate
- FilterSecurityInterceptor
- AuthenticationException
- SecurityMetadataSource
- AuthorizationManager
- AccessDeniedException
- ExceptionTranslationFilter


// DEBUG
FilterChainProxy (doFilter() : Line 330 )
ExceptionTranslationFilter (doFilter() : Line 119 )
FilterSecurityInterceptor (doFilter() : Line 79, invoke() : Line 102)
AbstractSecurityInterceptor (beforeInvocation() : Line 186,187,199)













